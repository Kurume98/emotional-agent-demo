{"ast":null,"code":"var _jsxFileName = \"/Users/kurumeaugustine/emotional-agent-demo/frontend/src/components/EmotionalMemoryAgent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./EmotionalMemoryAgent.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmotionalMemoryAgent() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [isListening, setIsListening] = useState(false);\n  const [currentMood, setCurrentMood] = useState(\"neutral\");\n  const [backgroundColor, setBackgroundColor] = useState(\"#f5f5f5\");\n  const [voiceEmotion, setVoiceEmotion] = useState(null);\n  const [emotionalArc, setEmotionalArc] = useState([]);\n  const [moodHistory, setMoodHistory] = useState([]);\n  const [emotionalJourney, setEmotionalJourney] = useState([]);\n  const recognitionRef = useRef(null);\n  const audioContextRef = useRef(null);\n  const analyserRef = useRef(null);\n  const mediaStreamRef = useRef(null);\n  useEffect(() => {\n    // Initialize with welcome message\n    setMessages([{\n      text: \"Welcome to Emotional Memory Agent. I'll track every emotional shift and create a beautiful memory of your emotional journey.\",\n      sender: \"bot\",\n      timestamp: new Date(),\n      mood: \"neutral\",\n      voiceEmotion: \"neutral\"\n    }]);\n\n    // Initialize emotional arc with starting point\n    setEmotionalArc([{\n      timestamp: new Date(),\n      mood: \"neutral\",\n      intensity: 0.5,\n      trigger: \"conversation_start\"\n    }]);\n  }, []);\n  const updateEmotionalState = (newMood, voiceEmotion = null, trigger = \"text\") => {\n    const previousMood = currentMood;\n\n    // Calculate emotional intensity based on change\n    const intensity = calculateEmotionalIntensity(previousMood, newMood, voiceEmotion);\n\n    // Create emotional shift record\n    const emotionalShift = {\n      timestamp: new Date(),\n      previousMood,\n      newMood,\n      voiceEmotion,\n      intensity,\n      trigger,\n      id: Date.now()\n    };\n\n    // Update emotional arc\n    setEmotionalArc(prev => [...prev, {\n      timestamp: new Date(),\n      mood: newMood,\n      intensity,\n      trigger\n    }]);\n\n    // Update mood history\n    setMoodHistory(prev => [...prev, emotionalShift]);\n\n    // Update emotional journey for visualization\n    setEmotionalJourney(prev => [...prev, {\n      x: prev.length + 1,\n      y: getMoodValue(newMood),\n      mood: newMood,\n      timestamp: new Date()\n    }]);\n\n    // Update current state\n    setCurrentMood(newMood);\n    updateBackgroundColor(newMood, intensity);\n  };\n  const calculateEmotionalIntensity = (prevMood, newMood, voiceEmotion) => {\n    let intensity = 0.5;\n\n    // Increase intensity if voice emotion matches text emotion\n    if (voiceEmotion && voiceEmotion.toLowerCase().includes(newMood.toLowerCase())) {\n      intensity = 0.8;\n    }\n\n    // Increase intensity for dramatic mood changes\n    if (prevMood !== newMood) {\n      intensity = Math.min(intensity + 0.3, 1.0);\n    }\n    return intensity;\n  };\n  const updateBackgroundColor = (mood, intensity) => {\n    const baseColors = {\n      neutral: \"#f5f5f5\",\n      happy: \"#fff3e0\",\n      excited: \"#ffe0b2\",\n      sad: \"#e3f2fd\",\n      angry: \"#ffebee\",\n      calm: \"#e8f5e8\",\n      anxious: \"#fff8e1\"\n    };\n    const color = baseColors[mood] || baseColors.neutral;\n\n    // Adjust color intensity based on emotional intensity\n    const adjustedColor = adjustColorIntensity(color, intensity);\n    setBackgroundColor(adjustedColor);\n  };\n  const adjustColorIntensity = (color, intensity) => {\n    // Simple color intensity adjustment\n    const factor = 0.5 + intensity * 0.5;\n    return color;\n  };\n  const getMoodValue = mood => {\n    const moodValues = {\n      excited: 2,\n      happy: 1.5,\n      calm: 0.5,\n      neutral: 0,\n      anxious: -0.5,\n      sad: -1,\n      angry: -1.5\n    };\n    return moodValues[mood] || 0;\n  };\n  const getMoodColor = (mood, intensity = 1) => {\n    const colors = {\n      excited: `hsl(45, 100%, ${50 + intensity * 20}%)`,\n      happy: `hsl(120, 70%, ${50 + intensity * 20}%)`,\n      calm: `hsl(270, 50%, ${50 + intensity * 20}%)`,\n      neutral: `hsl(0, 0%, ${85 + intensity * 10}%)`,\n      anxious: `hsl(60, 80%, ${50 + intensity * 20}%)`,\n      sad: `hsl(210, 70%, ${50 + intensity * 20}%)`,\n      angry: `hsl(0, 70%, ${50 + intensity * 20}%)`\n    };\n    return colors[mood] || colors.neutral;\n  };\n  const getMoodEmoji = mood => {\n    const emojis = {\n      excited: \"🤗\",\n      happy: \"😊\",\n      calm: \"😌\",\n      neutral: \"😐\",\n      anxious: \"😰\",\n      sad: \"😢\",\n      angry: \"😠\"\n    };\n    return emojis[mood] || \"😐\";\n  };\n\n  // Voice analysis functions\n  const startVoiceAnalysis = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          sampleRate: 44100\n        }\n      });\n      mediaStreamRef.current = stream;\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      analyserRef.current = audioContextRef.current.createAnalyser();\n      analyserRef.current.fftSize = 2048;\n      const source = audioContextRef.current.createMediaStreamSource(stream);\n      source.connect(analyserRef.current);\n      setIsListening(true);\n      analyzeAudioStream();\n    } catch (error) {\n      console.error(\"Error accessing microphone:\", error);\n    }\n  };\n  const analyzeAudioStream = () => {\n    if (!analyserRef.current) return;\n    const bufferLength = analyserRef.current.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    const analyze = () => {\n      if (!isListening) return;\n      analyserRef.current.getByteFrequencyData(dataArray);\n      const average = dataArray.reduce((a, b) => a + b) / bufferLength;\n      const energy = Math.sqrt(dataArray.reduce((a, b) => a + Math.pow(b - average, 2), 0) / bufferLength);\n      const voiceEmotion = detectVoiceEmotion(average, energy, dataArray);\n      setVoiceEmotion(voiceEmotion);\n      requestAnimationFrame(analyze);\n    };\n    analyze();\n  };\n  const detectVoiceEmotion = (average, energy, frequencies) => {\n    const highFreqEnergy = frequencies.slice(frequencies.length * 0.7).reduce((a, b) => a + b, 0);\n    const lowFreqEnergy = frequencies.slice(0, frequencies.length * 0.3).reduce((a, b) => a + b, 0);\n    if (energy > 50 && highFreqEnergy > lowFreqEnergy * 2) {\n      return \"excited\";\n    } else if (energy > 40 && lowFreqEnergy > highFreqEnergy * 2) {\n      return \"angry\";\n    } else if (energy < 20) {\n      return \"sad\";\n    } else if (energy > 25 && energy < 35) {\n      return \"calm\";\n    } else {\n      return \"neutral\";\n    }\n  };\n  const stopVoiceAnalysis = () => {\n    if (mediaStreamRef.current) {\n      mediaStreamRef.current.getTracks().forEach(track => track.stop());\n    }\n    if (audioContextRef.current) {\n      audioContextRef.current.close();\n    }\n    setIsListening(false);\n  };\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    const textEmotion = analyzeTextEmotion(input);\n    const finalEmotion = voiceEmotion || textEmotion;\n    const userMessage = {\n      text: input,\n      sender: \"user\",\n      timestamp: new Date(),\n      mood: finalEmotion,\n      voiceEmotion: voiceEmotion || \"none\"\n    };\n    setMessages(prev => [...prev, userMessage]);\n    updateEmotionalState(finalEmotion, voiceEmotion, \"user_message\");\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/api/emotional-chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: input,\n          voiceEmotion: voiceEmotion,\n          currentMood: currentMood\n        })\n      });\n      const data = await response.json();\n      const botEmotion = analyzeTextEmotion(data.reply);\n      updateEmotionalState(botEmotion, null, \"bot_response\");\n      const botMessage = {\n        text: data.reply,\n        sender: \"bot\",\n        timestamp: new Date(),\n        mood: botEmotion\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      console.error(\"Error:\", error);\n      const errorMessage = {\n        text: \"I'm having trouble connecting. Please try again.\",\n        sender: \"bot\",\n        timestamp: new Date(),\n        mood: \"neutral\"\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    }\n    setInput(\"\");\n    setVoiceEmotion(null);\n  };\n  const analyzeTextEmotion = text => {\n    const lowerText = text.toLowerCase();\n    if (lowerText.includes(\"excited\") || lowerText.includes(\"amazing\") || lowerText.includes(\"wonderful\")) {\n      return \"excited\";\n    } else if (lowerText.includes(\"happy\") || lowerText.includes(\"joy\") || lowerText.includes(\"great\")) {\n      return \"happy\";\n    } else if (lowerText.includes(\"sad\") || lowerText.includes(\"sorry\") || lowerText.includes(\"upset\") || lowerText.includes(\"depressed\")) {\n      return \"sad\";\n    } else if (lowerText.includes(\"angry\") || lowerText.includes(\"frustrated\") || lowerText.includes(\"mad\")) {\n      return \"angry\";\n    } else if (lowerText.includes(\"calm\") || lowerText.includes(\"peaceful\") || lowerText.includes(\"relaxed\")) {\n      return \"calm\";\n    } else if (lowerText.includes(\"anxious\") || lowerText.includes(\"worried\") || lowerText.includes(\"nervous\")) {\n      return \"anxious\";\n    }\n    return \"neutral\";\n  };\n  const renderEmotionalArc = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"emotional-arc-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83C\\uDF08 Emotional Journey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"arc-visualization\",\n        children: emotionalArc.map((point, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"arc-point\",\n          style: {\n            backgroundColor: getMoodColor(point.mood, point.intensity),\n            opacity: 0.7 + point.intensity * 0.3\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"arc-mood\",\n            children: getMoodEmoji(point.mood)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"arc-time\",\n            children: point.timestamp.toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"arc-intensity\",\n            children: [\"Intensity: \", (point.intensity * 100).toFixed(0), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emotional-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Emotional Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mood-distribution\",\n          children: Object.entries(emotionalArc.reduce((acc, point) => {\n            acc[point.mood] = (acc[point.mood] || 0) + 1;\n            return acc;\n          }, {})).map(([mood, count]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mood-count\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: getMoodColor(mood)\n              },\n              children: [getMoodEmoji(mood), \" \", mood, \": \", count]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 17\n            }, this)\n          }, mood, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"emotional-memory-container\",\n    style: {\n      backgroundColor\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"emotional-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83E\\uDDE0 Emotional Memory Agent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-state\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mood-orb\",\n          style: {\n            backgroundColor: getMoodColor(currentMood),\n            boxShadow: `0 0 30px ${getMoodColor(currentMood)}40`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mood-emoji\",\n            children: getMoodEmoji(currentMood)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mood-label\",\n            children: currentMood.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"emotional-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages-container\",\n          children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.sender}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: msg.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message-mood\",\n                style: {\n                  color: getMoodColor(msg.mood)\n                },\n                children: [getMoodEmoji(msg.mood), \" \", msg.mood]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 19\n              }, this), msg.voiceEmotion && msg.voiceEmotion !== \"none\" && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"voice-indicator\",\n                children: [\"\\uD83C\\uDFA4 \", msg.voiceEmotion]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message-timestamp\",\n                children: msg.timestamp.toLocaleTimeString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 17\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: input,\n            onChange: e => setInput(e.target.value),\n            onKeyDown: e => e.key === \"Enter\" && handleSend(),\n            placeholder: \"Share your feelings...\",\n            className: \"emotional-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSend,\n              className: \"send-button\",\n              children: \"\\uD83D\\uDCAC Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: isListening ? stopVoiceAnalysis : startVoiceAnalysis,\n              className: `voice-button ${isListening ? 'listening' : ''}`,\n              children: isListening ? '⏹️ Stop' : '🎤 Voice'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this), isListening && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"voice-feedback\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"listening-waves\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Analyzing your voice tone...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"memory-section\",\n        children: renderEmotionalArc()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 356,\n    columnNumber: 5\n  }, this);\n}\n_s(EmotionalMemoryAgent, \"rtfY7zQQXGm9OsYlxm1jy+NX01Q=\");\n_c = EmotionalMemoryAgent;\nexport default EmotionalMemoryAgent;\nvar _c;\n$RefreshReg$(_c, \"EmotionalMemoryAgent\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","EmotionalMemoryAgent","_s","messages","setMessages","input","setInput","isListening","setIsListening","currentMood","setCurrentMood","backgroundColor","setBackgroundColor","voiceEmotion","setVoiceEmotion","emotionalArc","setEmotionalArc","moodHistory","setMoodHistory","emotionalJourney","setEmotionalJourney","recognitionRef","audioContextRef","analyserRef","mediaStreamRef","text","sender","timestamp","Date","mood","intensity","trigger","updateEmotionalState","newMood","previousMood","calculateEmotionalIntensity","emotionalShift","id","now","prev","x","length","y","getMoodValue","updateBackgroundColor","prevMood","toLowerCase","includes","Math","min","baseColors","neutral","happy","excited","sad","angry","calm","anxious","color","adjustedColor","adjustColorIntensity","factor","moodValues","getMoodColor","colors","getMoodEmoji","emojis","startVoiceAnalysis","stream","navigator","mediaDevices","getUserMedia","audio","echoCancellation","noiseSuppression","sampleRate","current","window","AudioContext","webkitAudioContext","createAnalyser","fftSize","source","createMediaStreamSource","connect","analyzeAudioStream","error","console","bufferLength","frequencyBinCount","dataArray","Uint8Array","analyze","getByteFrequencyData","average","reduce","a","b","energy","sqrt","pow","detectVoiceEmotion","requestAnimationFrame","frequencies","highFreqEnergy","slice","lowFreqEnergy","stopVoiceAnalysis","getTracks","forEach","track","stop","close","handleSend","trim","textEmotion","analyzeTextEmotion","finalEmotion","userMessage","response","fetch","method","headers","body","JSON","stringify","message","data","json","botEmotion","reply","botMessage","errorMessage","lowerText","renderEmotionalArc","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","point","idx","style","opacity","toLocaleTimeString","toFixed","Object","entries","acc","count","boxShadow","toUpperCase","msg","type","value","onChange","e","target","onKeyDown","key","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/kurumeaugustine/emotional-agent-demo/frontend/src/components/EmotionalMemoryAgent.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./EmotionalMemoryAgent.css\";\n\nfunction EmotionalMemoryAgent() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [isListening, setIsListening] = useState(false);\n  const [currentMood, setCurrentMood] = useState(\"neutral\");\n  const [backgroundColor, setBackgroundColor] = useState(\"#f5f5f5\");\n  const [voiceEmotion, setVoiceEmotion] = useState(null);\n  const [emotionalArc, setEmotionalArc] = useState([]);\n  const [moodHistory, setMoodHistory] = useState([]);\n  const [emotionalJourney, setEmotionalJourney] = useState([]);\n  \n  const recognitionRef = useRef(null);\n  const audioContextRef = useRef(null);\n  const analyserRef = useRef(null);\n  const mediaStreamRef = useRef(null);\n\n  useEffect(() => {\n    // Initialize with welcome message\n    setMessages([{\n      text: \"Welcome to Emotional Memory Agent. I'll track every emotional shift and create a beautiful memory of your emotional journey.\",\n      sender: \"bot\",\n      timestamp: new Date(),\n      mood: \"neutral\",\n      voiceEmotion: \"neutral\"\n    }]);\n    \n    // Initialize emotional arc with starting point\n    setEmotionalArc([{\n      timestamp: new Date(),\n      mood: \"neutral\",\n      intensity: 0.5,\n      trigger: \"conversation_start\"\n    }]);\n  }, []);\n\n  const updateEmotionalState = (newMood, voiceEmotion = null, trigger = \"text\") => {\n    const previousMood = currentMood;\n    \n    // Calculate emotional intensity based on change\n    const intensity = calculateEmotionalIntensity(previousMood, newMood, voiceEmotion);\n    \n    // Create emotional shift record\n    const emotionalShift = {\n      timestamp: new Date(),\n      previousMood,\n      newMood,\n      voiceEmotion,\n      intensity,\n      trigger,\n      id: Date.now()\n    };\n    \n    // Update emotional arc\n    setEmotionalArc(prev => [...prev, {\n      timestamp: new Date(),\n      mood: newMood,\n      intensity,\n      trigger\n    }]);\n    \n    // Update mood history\n    setMoodHistory(prev => [...prev, emotionalShift]);\n    \n    // Update emotional journey for visualization\n    setEmotionalJourney(prev => [...prev, {\n      x: prev.length + 1,\n      y: getMoodValue(newMood),\n      mood: newMood,\n      timestamp: new Date()\n    }]);\n    \n    // Update current state\n    setCurrentMood(newMood);\n    updateBackgroundColor(newMood, intensity);\n  };\n\n  const calculateEmotionalIntensity = (prevMood, newMood, voiceEmotion) => {\n    let intensity = 0.5;\n    \n    // Increase intensity if voice emotion matches text emotion\n    if (voiceEmotion && voiceEmotion.toLowerCase().includes(newMood.toLowerCase())) {\n      intensity = 0.8;\n    }\n    \n    // Increase intensity for dramatic mood changes\n    if (prevMood !== newMood) {\n      intensity = Math.min(intensity + 0.3, 1.0);\n    }\n    \n    return intensity;\n  };\n\n  const updateBackgroundColor = (mood, intensity) => {\n    const baseColors = {\n      neutral: \"#f5f5f5\",\n      happy: \"#fff3e0\",\n      excited: \"#ffe0b2\",\n      sad: \"#e3f2fd\",\n      angry: \"#ffebee\",\n      calm: \"#e8f5e8\",\n      anxious: \"#fff8e1\"\n    };\n    \n    const color = baseColors[mood] || baseColors.neutral;\n    \n    // Adjust color intensity based on emotional intensity\n    const adjustedColor = adjustColorIntensity(color, intensity);\n    setBackgroundColor(adjustedColor);\n  };\n\n  const adjustColorIntensity = (color, intensity) => {\n    // Simple color intensity adjustment\n    const factor = 0.5 + (intensity * 0.5);\n    return color;\n  };\n\n  const getMoodValue = (mood) => {\n    const moodValues = {\n      excited: 2,\n      happy: 1.5,\n      calm: 0.5,\n      neutral: 0,\n      anxious: -0.5,\n      sad: -1,\n      angry: -1.5\n    };\n    return moodValues[mood] || 0;\n  };\n\n  const getMoodColor = (mood, intensity = 1) => {\n    const colors = {\n      excited: `hsl(45, 100%, ${50 + intensity * 20}%)`,\n      happy: `hsl(120, 70%, ${50 + intensity * 20}%)`,\n      calm: `hsl(270, 50%, ${50 + intensity * 20}%)`,\n      neutral: `hsl(0, 0%, ${85 + intensity * 10}%)`,\n      anxious: `hsl(60, 80%, ${50 + intensity * 20}%)`,\n      sad: `hsl(210, 70%, ${50 + intensity * 20}%)`,\n      angry: `hsl(0, 70%, ${50 + intensity * 20}%)`\n    };\n    return colors[mood] || colors.neutral;\n  };\n\n  const getMoodEmoji = (mood) => {\n    const emojis = {\n      excited: \"🤗\",\n      happy: \"😊\",\n      calm: \"😌\",\n      neutral: \"😐\",\n      anxious: \"😰\",\n      sad: \"😢\",\n      angry: \"😠\"\n    };\n    return emojis[mood] || \"😐\";\n  };\n\n  // Voice analysis functions\n  const startVoiceAnalysis = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ \n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          sampleRate: 44100\n        } \n      });\n      \n      mediaStreamRef.current = stream;\n      \n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      analyserRef.current = audioContextRef.current.createAnalyser();\n      analyserRef.current.fftSize = 2048;\n      \n      const source = audioContextRef.current.createMediaStreamSource(stream);\n      source.connect(analyserRef.current);\n      \n      setIsListening(true);\n      analyzeAudioStream();\n      \n    } catch (error) {\n      console.error(\"Error accessing microphone:\", error);\n    }\n  };\n\n  const analyzeAudioStream = () => {\n    if (!analyserRef.current) return;\n    \n    const bufferLength = analyserRef.current.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    \n    const analyze = () => {\n      if (!isListening) return;\n      \n      analyserRef.current.getByteFrequencyData(dataArray);\n      \n      const average = dataArray.reduce((a, b) => a + b) / bufferLength;\n      const energy = Math.sqrt(dataArray.reduce((a, b) => a + Math.pow(b - average, 2), 0) / bufferLength);\n      \n      const voiceEmotion = detectVoiceEmotion(average, energy, dataArray);\n      setVoiceEmotion(voiceEmotion);\n      \n      requestAnimationFrame(analyze);\n    };\n    \n    analyze();\n  };\n\n  const detectVoiceEmotion = (average, energy, frequencies) => {\n    const highFreqEnergy = frequencies.slice(frequencies.length * 0.7).reduce((a, b) => a + b, 0);\n    const lowFreqEnergy = frequencies.slice(0, frequencies.length * 0.3).reduce((a, b) => a + b, 0);\n    \n    if (energy > 50 && highFreqEnergy > lowFreqEnergy * 2) {\n      return \"excited\";\n    } else if (energy > 40 && lowFreqEnergy > highFreqEnergy * 2) {\n      return \"angry\";\n    } else if (energy < 20) {\n      return \"sad\";\n    } else if (energy > 25 && energy < 35) {\n      return \"calm\";\n    } else {\n      return \"neutral\";\n    }\n  };\n\n  const stopVoiceAnalysis = () => {\n    if (mediaStreamRef.current) {\n      mediaStreamRef.current.getTracks().forEach(track => track.stop());\n    }\n    if (audioContextRef.current) {\n      audioContextRef.current.close();\n    }\n    setIsListening(false);\n  };\n\n  const handleSend = async () => {\n    if (!input.trim()) return;\n\n    const textEmotion = analyzeTextEmotion(input);\n    const finalEmotion = voiceEmotion || textEmotion;\n    \n    const userMessage = { \n      text: input, \n      sender: \"user\", \n      timestamp: new Date(),\n      mood: finalEmotion,\n      voiceEmotion: voiceEmotion || \"none\"\n    };\n    \n    setMessages(prev => [...prev, userMessage]);\n    updateEmotionalState(finalEmotion, voiceEmotion, \"user_message\");\n\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/api/emotional-chat\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ \n          message: input,\n          voiceEmotion: voiceEmotion,\n          currentMood: currentMood\n        }),\n      });\n\n      const data = await response.json();\n      \n      const botEmotion = analyzeTextEmotion(data.reply);\n      updateEmotionalState(botEmotion, null, \"bot_response\");\n      \n      const botMessage = { \n        text: data.reply, \n        sender: \"bot\",\n        timestamp: new Date(),\n        mood: botEmotion\n      };\n      \n      setMessages(prev => [...prev, botMessage]);\n      \n    } catch (error) {\n      console.error(\"Error:\", error);\n      const errorMessage = { \n        text: \"I'm having trouble connecting. Please try again.\", \n        sender: \"bot\",\n        timestamp: new Date(),\n        mood: \"neutral\"\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    }\n\n    setInput(\"\");\n    setVoiceEmotion(null);\n  };\n\n  const analyzeTextEmotion = (text) => {\n    const lowerText = text.toLowerCase();\n    \n    if (lowerText.includes(\"excited\") || lowerText.includes(\"amazing\") || lowerText.includes(\"wonderful\")) {\n      return \"excited\";\n    } else if (lowerText.includes(\"happy\") || lowerText.includes(\"joy\") || lowerText.includes(\"great\")) {\n      return \"happy\";\n    } else if (lowerText.includes(\"sad\") || lowerText.includes(\"sorry\") || lowerText.includes(\"upset\") || lowerText.includes(\"depressed\")) {\n      return \"sad\";\n    } else if (lowerText.includes(\"angry\") || lowerText.includes(\"frustrated\") || lowerText.includes(\"mad\")) {\n      return \"angry\";\n    } else if (lowerText.includes(\"calm\") || lowerText.includes(\"peaceful\") || lowerText.includes(\"relaxed\")) {\n      return \"calm\";\n    } else if (lowerText.includes(\"anxious\") || lowerText.includes(\"worried\") || lowerText.includes(\"nervous\")) {\n      return \"anxious\";\n    }\n    return \"neutral\";\n  };\n\n  const renderEmotionalArc = () => {\n    return (\n      <div className=\"emotional-arc-container\">\n        <h3>🌈 Emotional Journey</h3>\n        <div className=\"arc-visualization\">\n          {emotionalArc.map((point, idx) => (\n            <div \n              key={idx} \n              className=\"arc-point\"\n              style={{\n                backgroundColor: getMoodColor(point.mood, point.intensity),\n                opacity: 0.7 + (point.intensity * 0.3)\n              }}\n            >\n              <div className=\"arc-mood\">{getMoodEmoji(point.mood)}</div>\n              <div className=\"arc-time\">{point.timestamp.toLocaleTimeString()}</div>\n              <div className=\"arc-intensity\">Intensity: {(point.intensity * 100).toFixed(0)}%</div>\n            </div>\n          ))}\n        </div>\n        \n        <div className=\"emotional-summary\">\n          <h4>Emotional Summary</h4>\n          <div className=\"mood-distribution\">\n            {Object.entries(\n              emotionalArc.reduce((acc, point) => {\n                acc[point.mood] = (acc[point.mood] || 0) + 1;\n                return acc;\n              }, {})\n            ).map(([mood, count]) => (\n              <div key={mood} className=\"mood-count\">\n                <span style={{ color: getMoodColor(mood) }}>\n                  {getMoodEmoji(mood)} {mood}: {count}\n                </span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"emotional-memory-container\" style={{ backgroundColor }}>\n      <header className=\"emotional-header\">\n        <h1>🧠 Emotional Memory Agent</h1>\n        <div className=\"current-state\">\n          <div \n            className=\"mood-orb\" \n            style={{ \n              backgroundColor: getMoodColor(currentMood),\n              boxShadow: `0 0 30px ${getMoodColor(currentMood)}40`\n            }}\n          >\n            <div className=\"mood-emoji\">{getMoodEmoji(currentMood)}</div>\n            <div className=\"mood-label\">{currentMood.toUpperCase()}</div>\n          </div>\n        </div>\n      </header>\n\n      <main className=\"emotional-main\">\n        <div className=\"chat-section\">\n          <div className=\"messages-container\">\n            {messages.map((msg, idx) => (\n              <div key={idx} className={`message ${msg.sender}`}>\n                <div className=\"message-content\">{msg.text}</div>\n                <div className=\"message-meta\">\n                  <span className=\"message-mood\" style={{ color: getMoodColor(msg.mood) }}>\n                    {getMoodEmoji(msg.mood)} {msg.mood}\n                  </span>\n                  {msg.voiceEmotion && msg.voiceEmotion !== \"none\" && (\n                    <span className=\"voice-indicator\">🎤 {msg.voiceEmotion}</span>\n                  )}\n                  <span className=\"message-timestamp\">\n                    {msg.timestamp.toLocaleTimeString()}\n                  </span>\n                </div>\n              </div>\n            ))}\n          </div>\n\n          <div className=\"input-section\">\n            <input\n              type=\"text\"\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              onKeyDown={(e) => e.key === \"Enter\" && handleSend()}\n              placeholder=\"Share your feelings...\"\n              className=\"emotional-input\"\n            />\n            \n            <div className=\"control-buttons\">\n              <button onClick={handleSend} className=\"send-button\">\n                💬 Send\n              </button>\n              \n              <button \n                onClick={isListening ? stopVoiceAnalysis : startVoiceAnalysis}\n                className={`voice-button ${isListening ? 'listening' : ''}`}\n              >\n                {isListening ? '⏹️ Stop' : '🎤 Voice'}\n              </button>\n            </div>\n          </div>\n\n          {isListening && (\n            <div className=\"voice-feedback\">\n              <div className=\"listening-waves\">\n                <span></span>\n                <span></span>\n                <span></span>\n                <span></span>\n              </div>\n              <p>Analyzing your voice tone...</p>\n            </div>\n          )}\n        </div>\n\n        <div className=\"memory-section\">\n          {renderEmotionalArc()}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default EmotionalMemoryAgent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}