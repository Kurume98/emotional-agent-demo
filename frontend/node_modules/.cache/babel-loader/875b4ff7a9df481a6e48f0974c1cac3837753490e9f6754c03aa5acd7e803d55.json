{"ast":null,"code":"var _jsxFileName = \"/Users/kurumeaugustine/emotional-agent-demo/frontend/src/components/Chatbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbox() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      text: input,\n      sender: \"user\"\n    };\n    setMessages([...messages, userMessage]);\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: input\n        })\n      });\n      const data = await response.json();\n      const botMessage = {\n        text: data.reply,\n        sender: \"bot\"\n      };\n      setMessages(prev => [...prev, botMessage]);\n\n      // ðŸ”Š Play AI voice reply\n      if (data.audio_url) {\n        const audio = new Audio(data.audio_url);\n        audio.play();\n      }\n    } catch (error) {\n      console.error(\"Error talking to backend:\", error);\n    }\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbox\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbox-header\",\n      children: \"Adaptive Emotional Intelligence\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: msg.text\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: e => e.key === \"Enter\" && handleSend(),\n        placeholder: \"Speak with Adaptive Emotional Intelligence...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbox, \"bxrUXnlHDt+zalfpk8IFX5tJV48=\");\n_c = Chatbox;\nexport default Chatbox;\nvar _c;\n$RefreshReg$(_c, \"Chatbox\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbox","_s","messages","setMessages","input","setInput","handleSend","trim","userMessage","text","sender","response","fetch","method","headers","body","JSON","stringify","message","data","json","botMessage","reply","prev","audio_url","audio","Audio","play","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","idx","value","onChange","e","target","onKeyDown","key","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/kurumeaugustine/emotional-agent-demo/frontend/src/components/Chatbox.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction Chatbox() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n\n  const handleSend = async () => {\n    if (!input.trim()) return;\n\n    const userMessage = { text: input, sender: \"user\" };\n    setMessages([...messages, userMessage]);\n\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/chat\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ message: input }),\n      });\n\n      const data = await response.json();\n      const botMessage = { text: data.reply, sender: \"bot\" };\n      setMessages((prev) => [...prev, botMessage]);\n\n      // ðŸ”Š Play AI voice reply\n      if (data.audio_url) {\n        const audio = new Audio(data.audio_url);\n        audio.play();\n      }\n    } catch (error) {\n      console.error(\"Error talking to backend:\", error);\n    }\n\n    setInput(\"\");\n  };\n\n  return (\n    <div className=\"chatbox\">\n      <div className=\"chatbox-header\">Adaptive Emotional Intelligence</div>\n      <div className=\"messages\">\n        {messages.map((msg, idx) => (\n          <div key={idx} className={`message ${msg.sender}`}>\n            {msg.text}\n          </div>\n        ))}\n      </div>\n      <div className=\"input-area\">\n        <input\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onKeyDown={(e) => e.key === \"Enter\" && handleSend()}\n          placeholder=\"Speak with Adaptive Emotional Intelligence...\"\n        />\n        <button onClick={handleSend}>Send</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Chatbox;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}